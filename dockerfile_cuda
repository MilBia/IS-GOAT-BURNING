# Use a base image with CUDA and cuDNN pre-installed
FROM nvidia/cuda:12.3.2-cudnn9-devel-ubuntu22.04

# Set the working directory
WORKDIR /app

# Install system dependencies (required by OpenCV and other tools)
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    pkg-config \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libgtk-3-dev \
    python3-dev \
    python3-pip \
    wget \
    unzip \
    curl \
    python3-numpy \
    && rm -rf /var/lib/apt/lists/*


# Download OpenCV source code (choose a specific version)
# Or any other version
ARG OPENCV_VERSION=4.11.0
RUN wget https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip -O opencv.zip && \
    unzip opencv.zip && \
    mv opencv-${OPENCV_VERSION} opencv

# Download opencv_contrib source code
# Must match OPENCV_VERSION
ARG OPENCV_CONTRIB_VERSION=4.11.0
RUN wget https://github.com/opencv/opencv_contrib/archive/${OPENCV_CONTRIB_VERSION}.zip -O opencv_contrib.zip && \
    unzip opencv_contrib.zip && \
    mv opencv_contrib-${OPENCV_CONTRIB_VERSION} opencv_contrib

# Create a build directory
RUN mkdir -p /app/opencv/build

# Configure and build OpenCV with CUDA support
#replace "8.6" with your GPU architecture, check with nvidia-smi
RUN cd /app/opencv/build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D WITH_CUDA=ON \
          -D CUDA_ARCH_BIN="8.6" \
          -D CUDA_ARCH_PTX="" \
          -D WITH_CUDNN=ON \
          -D OPENCV_DNN_CUDA=ON \
          -D ENABLE_FAST_MATH=1 \
          -D CUDA_FAST_MATH=1 \
          -D WITH_OPENGL=ON \
          -D WITH_V4L=ON \
          -D WITH_QT=OFF \
          -D WITH_TBB=ON \
          -D BUILD_opencv_python3=ON \
          -D BUILD_opencv_python2=OFF \
          -D PYTHON_EXECUTABLE=$(which python3) \
          -D PYTHON3_LIBRARY=$(python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")/site-packages \
          -D PYTHON3_INCLUDE_DIR=$(python3 -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") \
          -D INSTALL_PYTHON_EXAMPLES=OFF \
          -D BUILD_EXAMPLES=OFF \
          -D OPENCV_ENABLE_NONFREE=ON \
          -D OPENCV_EXTRA_MODULES_PATH=/app/opencv_contrib/modules \
          .. && \
    make -j$(nproc) && \
    make install && \
    ldconfig


COPY requirements_cuda.txt .
RUN pip install -r requirements_cuda.txt

# Remove the opencv-python package installed by pip (if any) to avoid conflicts
RUN pip3 uninstall -y opencv-python opencv-python-headless

# Clean up to reduce image size
RUN rm -rf /app/opencv.zip /app/opencv_contrib.zip /app/opencv /app/opencv_contrib

# Copy the application code
COPY . .

# Set environment variables (Optional, but good practice)
ENV PYTHONPATH "${PYTHONPATH}:/app"

# Command to run the application
CMD ["python3", "burning_goat_detection.py"]
